---
import { Image } from 'astro:assets'
import localBirdImage from '@assets/svg/mdn.svg'
const shapes: { style: string; label: string }[] = [
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  },
  {
    style:
      '-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);  clip-path: polygon(50% 0%, 0% 100%, 100% 100%)',
    label: '三角形'
  }
]
---

<script>
  import $ from 'jquery'
  import Draggabilly from 'draggabilly'
  const shapeDoms = document.querySelectorAll('figure.shape-preset')
  shapeDoms.forEach((dom) => {
    dom.addEventListener('click', () => {
      console.log('🚀 ~ dom.addEventListener ~ dom:', dom)
      alert('按钮被点击了！')
    })
  })
  // const clipPathSelect: HTMLElement | null = document.getElementById('clipPath')
  // var draggie = new Draggabilly(clipPathSelect, {
  //   // options...
  // })
  const $draggable = $('.draggable')
  var draggie = new Draggabilly($draggable.get(0) as Element, {
    // options...
  })
  console.log('🚀 ~ draggie:', draggie)
  /* 
  if (clipPathSelect) {
    clipPathSelect.addEventListener('change', function (evt: any) {
      const imgDom: HTMLElement | null = document.getElementById('clipped')
      if (imgDom) {
        imgDom.style.clipPath = evt.target.value
      }
    })
  } */
  /*   
const insetBtn: HTMLElement | null = document.getElementById('insetBtn')
  const clipPathDom: HTMLElement | null = document.getElementById('clipPathDom')
  insetBtn &&
    insetBtn.addEventListener('click', (e) => {
      if (clipPathDom) {
        clipPathDom.style.clipPath = 'inset(10px)'
      }
    }) */
</script>
<div class='draggable w-10px h-10px bg-red-500'></div>
<div class='not-content w-full h-400px flex flex-col b-solid b-1'>
  <div>
    <span>自定义clip-path</span>
  </div>
  <div class='not-content flex-1 w-full flex b-solid b-0 b-y-1 overflow-hidden'>
    <div
      class='flex-1 bg-yellow-100 p-2 h-full flex flex-col overflow-hidden gap-2 b-solid b-0 b-r-1 border-collapse'
    >
      <span>选择一个预设形状</span>
      <div class='overflow-hidden flex-1'>
        <!--  -->
        <div class='overflow-auto h-full w-full grid grid-cols-2 gap-10px px-4'>
          {
            shapes.map((v) => (
              <figure class='shape-preset min-h-120px flex flex-col items-center p-2 hover:bg-gray-200 rounded-lg'>
                <div style={v.style} class='w-full h-full bg-red-200' />
                <figcaption>{v.label}</figcaption>
              </figure>
            ))
          }
        </div>
      </div>
    </div>
    <div
      class='w-400px h-full bg-blue-100 flex items-center justify-center border-collapse'
    >
      <div class='w-2/3 h-2/3 bg-red-100 clippath'>
        <div id='clipPathDom' class='w-full h-full bg-green-200'></div>
      </div>
    </div>
  </div>
  <div class=''>asdasd</div>
</div>
<Image src={localBirdImage} alt='mdn logo' id='clipped' />
<svg height='0' width='0'>
  <defs>
    <clipPath id='cross'>
      <rect y='110' x='137' width='90' height='90'></rect>
      <rect x='0' y='110' width='90' height='90'></rect>
      <rect x='137' y='0' width='90' height='90'></rect>
      <rect x='0' y='0' width='90' height='90'></rect>
    </clipPath>
  </defs>
</svg>
<select id='clipPath'>
  <option value='none'>none</option>
  <option value='circle(100px at 110px 100px)'>circle</option>
  <option value='url(#cross)' selected>cross</option>
  <option value='inset(20px round 20px)'>inset</option>
  <option value="path('M 0 200 L 0,110 A 110,90 0,0,1 240,100 L 200 340 z')">
    path
  </option>
</select>
<style lang='scss' scoped>
  #clipped {
    margin-bottom: 20px;
    clip-path: url(#cross);
  }
  .clip-path-inset {
    clip-path: inset(20px);
  }
  .clippath {
    // clip-path: margin-box;
    clip-path: border-box;
  }
</style>
